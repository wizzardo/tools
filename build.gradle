allprojects {
    apply plugin: 'java'
//    apply plugin: 'tools-gradle-build'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    group = 'com.wizzardo.tools'
    version = '0.24-SNAPSHOT'

    javadoc {
        options.tags = [ "author:" ]
    }

    repositories {
        mavenCentral()
    }

    test {
        testLogging {
            events "failed"
            exceptionFormat "full"
        }
        maxHeapSize = "1g"
    }
}

buildscript {
    repositories {
        maven {
            url "https://central.sonatype.com/repository/maven-snapshots/"
        }
        mavenCentral()
    }
//    dependencies {
//        classpath 'com.wizzardo.tools:tools-gradle-build:+'
//    }
}

archivesBaseName = "tools"
ext {
    descriptionString = 'Package of useful tools like http-client, json-parser, xml-parser, cropping and resizing images and other'
}

//apply plugin: 'tools-gradle-build'
apply from: 'gradle/sonatype.gradle'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jacoco {
    toolVersion = "0.8.5"
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

dependencies {
    compile project(':modules:tools-aws')
    compile project(':modules:tools-bytecode')
    compile project(':modules:tools-cache')
    compile project(':modules:tools-collections')
    compile project(':modules:tools-evaluation')
    compile project(':modules:tools-exception')
    compile project(':modules:tools-helpers')
    compile project(':modules:tools-http')
    compile project(':modules:tools-image')
    compile project(':modules:tools-interfaces')
    compile project(':modules:tools-io')
    compile project(':modules:tools-json')
    compile project(':modules:tools-math')
    compile project(':modules:tools-misc')
    compile project(':modules:tools-reflection')
    compile project(':modules:tools-security')
    compile project(':modules:tools-sql')
    compile project(':modules:tools-xml')
    compile project(':modules:tools-yaml')

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.google.code.gson:gson:2.2.4'
    testImplementation "org.assertj:assertj-core:3.18.1"
    testImplementation 'org.xerial:sqlite-jdbc:3.36.0.3'
    testImplementation "org.testcontainers:testcontainers:1.17.5"

    testImplementation "org.testcontainers:postgresql:1.19.3"
    testImplementation "org.postgresql:postgresql:42.7.3"

    testImplementation "org.testcontainers:oracle-xe:1.17.5"
    testImplementation "com.oracle.database.jdbc:ojdbc11-production:21.7.0.0"
    testImplementation 'org.apache.commons:commons-imaging:1.0-alpha3'
}



task copyJars(type: Copy, dependsOn: subprojects.jar) {
    from(subprojects.jar)
    into project.file('build/libs')
}

//sqlTools {
//    migrationsTest {
//        enabled = true
//        src = 'sql/migrations'
//        out = 'sql/migrations.txt'
//    }
//    tablesGeneratorTest {
//        enabled = true
//        src = 'src/test/java/com/wizzardo/tools/sql/model'
//        out = 'src/test/java/com/wizzardo/tools/sql/generated'
//        packageName = 'com.wizzardo.tools.sql.generated'
//    }
//}